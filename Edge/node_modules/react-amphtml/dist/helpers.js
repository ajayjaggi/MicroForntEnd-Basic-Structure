'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

require('react');
var PropTypes = _interopDefault(require('prop-types'));
var __chunk_1 = require('./chunk-874ba39f.js');
var __chunk_2 = require('./chunk-00861ebd.js');

// TODO: Remove `{ Component }` when Rollup fixes its code splitting.
const ON_ATTRIBUTE = 'on';

const Action = ({
  children,
  events
}) => {
  const eventString = Object.entries(events).reduce((entireEventString, [eventName, eventActions], eventIndex) => {
    const actionString = eventActions.reduce((entireActionString, nextAction, actionIndex) => `${entireActionString}${actionIndex > 0 ? ',' : ''}${nextAction}`, '');
    return `${entireEventString}${eventIndex > 0 ? ';' : ''}${eventName}:${actionString}`;
  }, '');
  return children({
    [ON_ATTRIBUTE]: eventString
  });
};

Action.propTypes = {
  children: PropTypes.func.isRequired,
  events: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)).isRequired
};

const BLACKLIST = [ON_ATTRIBUTE];
const boundAttributeRegExp = /^data-amp-.*?$/;

const Bind = (_ref, context) => {
  let {
    children
  } = _ref,
      props = __chunk_2._objectWithoutProperties(_ref, ["children"]);

  __chunk_2.contextHelper({
    context,
    extension: 'amp-bind'
  });
  const boundAttributeProps = Object.entries(props).reduce((allProps, [propsName, propValue]) => __chunk_2._objectSpread({}, allProps, {
    [BLACKLIST.includes(propsName) || boundAttributeRegExp.test(propsName) ? propsName : `data-amp-bind-${propsName}`]: propValue
  }), {});
  return children(boundAttributeProps);
};

Bind.propTypes = {
  children: PropTypes.func.isRequired
};
Bind.contextTypes = {
  [__chunk_1.CONTEXT_KEY]: PropTypes.shape({
    addExtension: PropTypes.func.isRequired
  })
};

exports.Action = Action;
exports.Bind = Bind;
//# sourceMappingURL=helpers.js.map
